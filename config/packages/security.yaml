security:
    role_hierarchy:
        ROLE_USER_AUTORISED : [ROLE_USER]
        ROLE_RESPONSABLE_STOCK : [ROLE_USER_AUTORISED]
        ROLE_RESPONSABLE_MATERIEL : [ROLE_USER_AUTORISED]
        ROLE_RESPONSABLE : [ROLE_RESPONSABLE_STOCK, ROLE_RESPONSABLE_MATERIEL]
        ROLE_GESTIONNAIRE_INFORMATIQUE : [ROLE_RESPONSABLE]
        ROLE_GESTIONNAIRE_AUTOMOBILE : [ROLE_RESPONSABLE]
        ROLE_GESTIONNAIRE_SOUTIEN : [ROLE_RESPONSABLE]
        ROLE_GESTIONNAIRE_SANTE : [ROLE_RESPONSABLE]
        ROLE_GESTIONNAIRE_APPROVISIONNEMENT : [ROLE_RESPONSABLE]
        ROLE_GESTIONNAIRE : [ROLE_GESTIONNAIRE_INFORMATIQUE, ROLE_GESTIONNAIRE_SOUTIEN, ROLE_GESTIONNAIRE_SANTE, ROLE_GESTIONNAIRE_APPROVISIONNEMENT]
        ROLE_ADMIN : [ROLE_GESTIONNAIRE]
        ROLE_SUPER_ADMIN : [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 7200 # Durée de vie en secondes
                path: /
            lazy: true
            provider: app_user_provider
            form_login:
                login_path: app_login
                check_path: app_login
                enable_csrf: true
                default_target_path: materiel_service # Route où l'utilisateur sera redirigé après le login
                always_use_default_target_path: false # Utiliser cette route seulement s'il n'y a pas de page précédente
            logout:
                path: app_logout
                # where to redirect after logout
                target: app_login

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # partie azon'ny olona rehetra hidirana
        # - { path: ^/register$, roles: ROLE_USER }
        # - { path: ^/login$, roles: ROLE_USER }
        # partie natokana hoan'ny responsable matériel
        - { path: ^/commande/new$, roles: ROLE_RESPONSABLE_MATERIEL }
        - { path: ^/etat/materiel/liste$, roles: ROLE_RESPONSABLE_MATERIEL }
        - { path: ^/marche/\d+$, roles: ROLE_RESPONSABLE_MATERIEL }
        - { path: ^/expedier/\d+$, roles: ROLE_RESPONSABLE_MATERIEL }
        - { path: ^/panne/\d+$, roles: ROLE_RESPONSABLE_MATERIEL }
        - { path: ^/stock/\d+$, roles: ROLE_RESPONSABLE_MATERIEL }
        - { path: ^/reparation/\d+$, roles: ROLE_RESPONSABLE_MATERIEL }
        - { path: ^/expedition/liste$, roles: ROLE_RESPONSABLE_MATERIEL }
        - { path: ^/expedition/edit/\d+$, roles: ROLE_RESPONSABLE_MATERIEL }
        - { path: ^/reception/liste$, roles: ROLE_RESPONSABLE_MATERIEL }
        - { path: ^/reception/edit/\d+$, roles: ROLE_RESPONSABLE_MATERIEL }
        - { path: ^/recevoir/\d+$, roles: ROLE_RESPONSABLE_MATERIEL }
        # partie natokana hoan'ny responsable stock
        - { path: ^/etat/stock/liste$, roles: ROLE_RESPONSABLE_STOCK }
        - { path: ^/stock/ajout/new$, roles: ROLE_RESPONSABLE_STOCK }
        - { path: ^/stock/commande/new$, roles: ROLE_RESPONSABLE_STOCK }
        - { path: ^/stock/expedition/liste$, roles: ROLE_RESPONSABLE_STOCK }
        - { path: ^/stock/expedition/new$, roles: ROLE_RESPONSABLE_STOCK }
        - { path: ^/stock/reception/liste$, roles: ROLE_RESPONSABLE_STOCK }
        - { path: ^/stock/reception/\d+$, roles: ROLE_RESPONSABLE_STOCK }
        # partie natokana hoan'ny mpiandraikitra approvisionnement
        - { path: ^/stock/ajout/fournisseur$, roles: ROLE_RESPONSABLE }
        - { path: ^/ajout/new$, roles: ROLE_RESPONSABLE }
        # partie natokana hoan'ny administrateur
        - { path: ^/conversion, roles: ROLE_ADMIN }
        - { path: ^/etat, roles: ROLE_ADMIN }
        - { path: ^/fournisseur, roles: ROLE_ADMIN }
        - { path: ^/genre/produit, roles: ROLE_ADMIN }
        - { path: ^/historique/materiel, roles: ROLE_ADMIN }
        - { path: ^/materiel, roles: ROLE_ADMIN }
        - { path: ^/mouvement, roles: ROLE_ADMIN }
        - { path: ^/produit, roles: ROLE_ADMIN }
        - { path: ^/service, roles: ROLE_ADMIN }
        - { path: ^/stock, roles: ROLE_ADMIN }
        - { path: ^/type/mouvement, roles: ROLE_ADMIN }
        - { path: ^/type/produit, roles: ROLE_ADMIN }
        - { path: ^/unite, roles: ROLE_ADMIN }
        - { path: ^/user, roles: ROLE_ADMIN }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
